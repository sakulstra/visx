_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[76],{"201w":function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var a=t("J4UP");function i(e){return Object(a.a)(e)}},"Cf/J":function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t("aWzz"),i=t.n(a),r=t("ERkP"),l=t.n(r);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function d(e){var n=e.children,t=e.id,a=e.from,i=e.to,r=e.x1,d=e.y1,o=e.x2,u=e.y2,c=e.fromOffset,f=void 0===c?"0%":c,p=e.fromOpacity,m=void 0===p?1:p,y=e.toOffset,h=void 0===y?"100%":y,g=e.toOpacity,k=void 0===g?1:g,v=e.rotate,b=e.transform,S=e.vertical,x=void 0===S||S,V=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,["children","id","from","to","x1","y1","x2","y2","fromOffset","fromOpacity","toOffset","toOpacity","rotate","transform","vertical"]),R=r,O=o,T=d,q=u;return!x||R||O||T||q||(R="0",O="0",T="0",q="1"),l.a.createElement("defs",null,l.a.createElement("linearGradient",s({id:t,x1:R,y1:T,x2:O,y2:q,gradientTransform:v?"rotate("+v+")":b},V),!!n&&n,!n&&l.a.createElement("stop",{offset:f,stopColor:a,stopOpacity:m}),!n&&l.a.createElement("stop",{offset:h,stopColor:i,stopOpacity:k})))}d.propTypes={id:i.a.string.isRequired,from:i.a.string,to:i.a.string,x1:i.a.oneOfType([i.a.string,i.a.number]),x2:i.a.oneOfType([i.a.string,i.a.number]),y1:i.a.oneOfType([i.a.string,i.a.number]),y2:i.a.oneOfType([i.a.string,i.a.number]),fromOffset:i.a.oneOfType([i.a.string,i.a.number]),fromOpacity:i.a.oneOfType([i.a.string,i.a.number]),toOffset:i.a.oneOfType([i.a.string,i.a.number]),toOpacity:i.a.oneOfType([i.a.string,i.a.number]),rotate:i.a.oneOfType([i.a.string,i.a.number]),transform:i.a.string,children:i.a.node,vertical:i.a.bool}},HbGN:function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var a=t("+wNj");function i(e,n){if(null==e)return{};var t,i,r=Object(a.a)(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}},J4UP:function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));const a=1/4294967296;function i(e=Math.random()){let n=0|(0<=e&&e<1?e/a:Math.abs(e));return()=>(n=1664525*n+1013904223|0,a*(n>>>0))}},JjBE:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return f}));var a=t("ERkP"),i=t.n(a),r=t("Sk4R"),l=t("i9k6"),s=t("mdYk");t.d(n,"packageJson",(function(){return s}));var d=i.a.createElement,o={background:r.a},u={color:"#111"},c={margin:{top:40,left:40,right:20,bottom:30}};function f(){return d(l.a,{title:"Area difference chart",description:"<Threshold />",exampleProps:c,exampleRenderer:r.b,exampleUrl:"/threshold",tileStyles:o,detailsStyles:u})}},Sk4R:function(e,n,t){"use strict";t.d(n,"a",(function(){return T})),t.d(n,"b",(function(){return C}));var a=t("fGyu"),i=t("ERkP"),r=t.n(i),l=t("JmwF"),s=t("m+Ft"),d=t("geX1"),o=t("aWzz"),u=t.n(o),c=t("O94r"),f=t.n(c),p=t("wO8m"),m=t("hNR5");function y(){return(y=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function h(e){var n=e.className,t=e.curve,a=e.clipAboveTo,i=e.clipBelowTo,l=e.data,s=e.defined,d=e.x,o=e.y0,u=e.y1,c=e.aboveAreaProps,h=e.belowAreaProps,g=e.id,k=void 0===g?"":g;return r.a.createElement("g",{className:f()("visx-threshold",n)},r.a.createElement(p.a,{curve:t,data:l,x:d,y1:u,defined:s},(function(e){var n=e.path,t=null,s=null;return t=n.y0(i)(l),s=n.y0(a)(l),r.a.createElement("g",null,r.a.createElement(m.a,{id:"threshold-clip-below-"+k},r.a.createElement("path",{d:t||""})),r.a.createElement(m.a,{id:"threshold-clip-above-"+k},r.a.createElement("path",{d:s||""})))})),r.a.createElement(p.a,y({curve:t,data:l,defined:s,x:d,y0:o,y1:u,strokeWidth:0,clipPath:"url(#threshold-clip-below-"+k+")"},h)),r.a.createElement(p.a,y({curve:t,data:l,defined:s,x:d,y0:o,y1:u,strokeWidth:0,clipPath:"url(#threshold-clip-above-"+k+")"},c)))}h.propTypes={className:u.a.string,clipAboveTo:u.a.oneOfType([u.a.func,u.a.number]).isRequired,clipBelowTo:u.a.oneOfType([u.a.func,u.a.number]).isRequired,id:u.a.string.isRequired,data:u.a.array.isRequired,defined:u.a.func,x:u.a.oneOfType([u.a.func,u.a.number]).isRequired,y0:u.a.oneOfType([u.a.func,u.a.number]).isRequired,y1:u.a.oneOfType([u.a.func,u.a.number]).isRequired};var g=t("cjvV"),k=t("67po"),v=t("a7GN"),b=t("KRsa"),S=t("Ifh9"),x=t("eMuC"),V=t("s2H9"),R=t.n(V),O=r.a.createElement,T="#f3f3f3",q=function(e){return new Date(e.date).valueOf()},w=function(e){return Number(e["New York"])},A=function(e){return Number(e["San Francisco"])},E=Object(g.a)({domain:[Math.min.apply(Math,Object(a.a)(R.a.map(q))),Math.max.apply(Math,Object(a.a)(R.a.map(q)))]}),G=Object(k.a)({domain:[Math.min.apply(Math,Object(a.a)(R.a.map((function(e){return Math.min(w(e),A(e))})))),Math.max.apply(Math,Object(a.a)(R.a.map((function(e){return Math.max(w(e),A(e))}))))],nice:!0}),N={top:40,right:30,bottom:50,left:40};function C(e){var n=e.width,t=e.height,a=e.margin,i=void 0===a?N:a;if(n<10)return null;var r=n-i.left-i.right,o=t-i.top-i.bottom;return E.range([0,r]),G.range([o,0]),O("div",null,O("svg",{width:n,height:t},O("rect",{x:0,y:0,width:n,height:t,fill:T,rx:14}),O(l.a,{left:i.left,top:i.top},O(S.a,{scale:G,width:r,height:o,stroke:"#e0e0e0"}),O(x.a,{scale:E,width:r,height:o,stroke:"#e0e0e0"}),O("line",{x1:r,x2:r,y1:0,y2:o,stroke:"#e0e0e0"}),O(v.a,{top:o,scale:E,numTicks:n>520?10:5}),O(b.a,{scale:G}),O("text",{x:"-70",y:"15",transform:"rotate(-90)",fontSize:10},"Temperature (\xb0F)"),O(h,{id:"".concat(Math.random()),data:R.a,x:function(e){var n;return null!==(n=E(q(e)))&&void 0!==n?n:0},y0:function(e){var n;return null!==(n=G(w(e)))&&void 0!==n?n:0},y1:function(e){var n;return null!==(n=G(A(e)))&&void 0!==n?n:0},clipAboveTo:0,clipBelowTo:o,curve:s.b,belowAreaProps:{fill:"violet",fillOpacity:.4},aboveAreaProps:{fill:"green",fillOpacity:.4}}),O(d.a,{data:R.a,curve:s.b,x:function(e){var n;return null!==(n=E(q(e)))&&void 0!==n?n:0},y:function(e){var n;return null!==(n=G(A(e)))&&void 0!==n?n:0},stroke:"#222",strokeWidth:1.5,strokeOpacity:.8,strokeDasharray:"1,2"}),O(d.a,{data:R.a,curve:s.b,x:function(e){var n;return null!==(n=E(q(e)))&&void 0!==n?n:0},y:function(e){var n;return null!==(n=G(w(e)))&&void 0!==n?n:0},stroke:"#222",strokeWidth:1.5}))))}try{Example.displayName="Example",Example.__docgenInfo={description:"",displayName:"Example",props:{width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"{ top: number; right: number; bottom: number; left: number; } | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/sandboxes/visx-threshold/Example.tsx#Example"]={docgenInfo:Example.__docgenInfo,name:"Example",path:"src/sandboxes/visx-threshold/Example.tsx#Example"})}catch(_){}},"VB+g":function(e,n,t){"use strict";t.d(n,"a",(function(){return s}));var a=t("rkTo"),i=t("ZQHj");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var l={x:0,y:0};function s(e,n){if(!e||!n)return null;var t=function(e){if(!e)return r({},l);if(Object(i.g)(e))return e.changedTouches.length>0?{x:e.changedTouches[0].clientX,y:e.changedTouches[0].clientY}:r({},l);if(Object(i.c)(e))return{x:e.clientX,y:e.clientY};var n=null==e?void 0:e.target,t=n&&"getBoundingClientRect"in n?n.getBoundingClientRect():null;return t?{x:t.x+t.width/2,y:t.y+t.height/2}:r({},l)}(n),s=Object(i.d)(e)?e.ownerSVGElement:e,d=Object(i.e)(s)?s.getScreenCTM():null;if(Object(i.f)(s)&&d){var o=s.createSVGPoint();return o.x=t.x,o.y=t.y,o=o.matrixTransform(d.inverse()),new a.a({x:o.x,y:o.y})}var u=e.getBoundingClientRect();return new a.a({x:t.x-u.left-e.clientLeft,y:t.y-u.top-e.clientTop})}},ZQHj:function(e,n,t){"use strict";function a(e){return!!e&&e instanceof Element}function i(e){return!!e&&(e instanceof SVGElement||"ownerSVGElement"in e)}function r(e){return!!e&&"createSVGPoint"in e}function l(e){return!!e&&"getScreenCTM"in e}function s(e){return!!e&&"changedTouches"in e}function d(e){return!!e&&"clientX"in e}function o(e){return!!e&&(e instanceof Event||"nativeEvent"in e&&e.nativeEvent instanceof Event)}t.d(n,"a",(function(){return a})),t.d(n,"d",(function(){return i})),t.d(n,"f",(function(){return r})),t.d(n,"e",(function(){return l})),t.d(n,"g",(function(){return s})),t.d(n,"c",(function(){return d})),t.d(n,"b",(function(){return o}))},ZRGc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/grid",function(){return t("cTRB")}])},cTRB:function(e,n,t){"use strict";t.r(n);var a=t("ERkP"),i=t.n(a),r=t("cxan"),l=t("HbGN"),s=t("O94r"),d=t.n(s),o=t("JmwF"),u=t("hsl+"),c=t.n(u),f=t("rkTo"),p=t("nNND"),m=t("HlJr");function y(e){return"bandwidth"in e?e.bandwidth():0}try{y.displayName="getScaleBandwidth",y.__docgenInfo={description:"",displayName:"getScaleBandwidth",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/utils/getScaleBandwidth.ts#getScaleBandwidth"]={docgenInfo:y.__docgenInfo,name:"getScaleBandwidth",path:"../visx-grid/src/utils/getScaleBandwidth.ts#getScaleBandwidth"})}catch(B){}var h=i.a.createElement;function g(e){var n=e.top,t=void 0===n?0:n,a=e.left,i=void 0===a?0:a,s=e.scale,u=e.width,g=e.stroke,k=void 0===g?"#eaf0f6":g,v=e.strokeWidth,b=void 0===v?1:v,S=e.strokeDasharray,x=e.className,V=e.children,R=e.numTicks,O=void 0===R?10:R,T=e.lineStyle,q=e.offset,w=e.tickValues,A=Object(l.a)(e,["top","left","scale","width","stroke","strokeWidth","strokeDasharray","className","children","numTicks","lineStyle","offset","tickValues"]),E=null!==w&&void 0!==w?w:Object(p.a)(s,O),G=(null!==q&&void 0!==q?q:0)+y(s)/2,N=E.map((function(e){var n,t=(null!==(n=Object(m.a)(s(e)))&&void 0!==n?n:0)+G;return{from:new f.a({x:0,y:t}),to:new f.a({x:u,y:t})}}));return h(o.a,{className:d()("visx-rows",x),top:t,left:i},V?V({lines:N}):N.map((function(e,n){var t=e.from,a=e.to;return h(c.a,Object(r.a)({key:"row-line-".concat(n),from:t,to:a,stroke:k,strokeWidth:b,strokeDasharray:S,style:T},A))})))}try{g.displayName="GridRows",g.__docgenInfo={description:"",displayName:"GridRows",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to position.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},width:{defaultValue:null,description:"Total width of each grid row line.",name:"width",required:!0,type:{name:"number"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},from:{defaultValue:null,description:"Starting x,y point of the line.",name:"from",required:!1,type:{name:"Point | undefined"}},to:{defaultValue:null,description:"Ending x,y point of the line.",name:"to",required:!1,type:{name:"Point | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridRows.tsx#GridRows"]={docgenInfo:g.__docgenInfo,name:"GridRows",path:"../visx-grid/src/grids/GridRows.tsx#GridRows"})}catch(B){}var k=i.a.createElement;function v(e){var n=e.top,t=void 0===n?0:n,a=e.left,i=void 0===a?0:a,s=e.scale,u=e.height,h=e.stroke,g=void 0===h?"#eaf0f6":h,v=e.strokeWidth,b=void 0===v?1:v,S=e.strokeDasharray,x=e.className,V=e.numTicks,R=void 0===V?10:V,O=e.lineStyle,T=e.offset,q=e.tickValues,w=e.children,A=Object(l.a)(e,["top","left","scale","height","stroke","strokeWidth","strokeDasharray","className","numTicks","lineStyle","offset","tickValues","children"]),E=null!==q&&void 0!==q?q:Object(p.a)(s,R),G=(null!==T&&void 0!==T?T:0)+y(s)/2,N=E.map((function(e){var n,t=(null!==(n=Object(m.a)(s(e)))&&void 0!==n?n:0)+G;return{from:new f.a({x:t,y:0}),to:new f.a({x:t,y:u})}}));return k(o.a,{className:d()("visx-columns",x),top:t,left:i},w?w({lines:N}):N.map((function(e,n){var t=e.from,a=e.to;return k(c.a,Object(r.a)({key:"column-line-".concat(n),from:t,to:a,stroke:g,strokeWidth:b,strokeDasharray:S,style:O},A))})))}try{v.displayName="GridColumns",v.__docgenInfo={description:"",displayName:"GridColumns",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to position.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},height:{defaultValue:null,description:"Total height of each grid column line.",name:"height",required:!0,type:{name:"number"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},from:{defaultValue:null,description:"Starting x,y point of the line.",name:"from",required:!1,type:{name:"Point | undefined"}},to:{defaultValue:null,description:"Ending x,y point of the line.",name:"to",required:!1,type:{name:"Point | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridColumns.tsx#GridColumns"]={docgenInfo:v.__docgenInfo,name:"GridColumns",path:"../visx-grid/src/grids/GridColumns.tsx#GridColumns"})}catch(B){}var b=i.a.createElement;function S(e){var n=e.top,t=e.left,a=e.xScale,i=e.yScale,s=e.width,u=e.height,c=e.className,f=e.stroke,p=e.strokeWidth,m=e.strokeDasharray,y=e.numTicksRows,h=e.numTicksColumns,k=e.rowLineStyle,S=e.columnLineStyle,x=e.xOffset,V=e.yOffset,R=e.rowTickValues,O=e.columnTickValues,T=Object(l.a)(e,["top","left","xScale","yScale","width","height","className","stroke","strokeWidth","strokeDasharray","numTicksRows","numTicksColumns","rowLineStyle","columnLineStyle","xOffset","yOffset","rowTickValues","columnTickValues"]);return b(o.a,{className:d()("visx-grid",c),top:n,left:t},b(g,Object(r.a)({className:c,scale:i,width:s,stroke:f,strokeWidth:p,strokeDasharray:m,numTicks:y,lineStyle:k,offset:V,tickValues:R},T)),b(v,Object(r.a)({className:c,scale:a,height:u,stroke:f,strokeWidth:p,strokeDasharray:m,numTicks:h,lineStyle:S,offset:x,tickValues:O},T)))}try{S.displayName="Grid",S.__docgenInfo={description:"",displayName:"Grid",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},width:{defaultValue:null,description:"Total width of each grid row line.",name:"width",required:!1,type:{name:"number"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},stroke:{defaultValue:null,description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},left:{defaultValue:null,description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},top:{defaultValue:null,description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}},xScale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to map from ScaleInput to x-coordinates (GridColumns).",name:"xScale",required:!0,type:{name:"XScale"}},yScale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to map from ScaleInput to y-coordinates (GridRows).",name:"yScale",required:!0,type:{name:"YScale"}},xOffset:{defaultValue:null,description:"Pixel offset to apply as an x-translation to each GridColumns line.",name:"xOffset",required:!1,type:{name:"number | undefined"}},yOffset:{defaultValue:null,description:"Pixel offset to apply as an y-translation to each GridRows line.",name:"yOffset",required:!1,type:{name:"number | undefined"}},numTicksRows:{defaultValue:null,description:"Approximate number of row gridlines.",name:"numTicksRows",required:!1,type:{name:"number | undefined"}},numTicksColumns:{defaultValue:null,description:"Approximate number of column gridlines.",name:"numTicksColumns",required:!1,type:{name:"number | undefined"}},rowLineStyle:{defaultValue:null,description:"Style object to apply to GridRows.",name:"rowLineStyle",required:!1,type:{name:"CSSProperties | undefined"}},columnLineStyle:{defaultValue:null,description:"Style object to apply to GridColumns.",name:"columnLineStyle",required:!1,type:{name:"CSSProperties | undefined"}},rowTickValues:{defaultValue:null,description:"Exact values to be used for GridRows lines, passed to yScale. Use this if you need precise control over GridRows values.",name:"rowTickValues",required:!1,type:{name:"Parameters<YScale>[0][] | undefined"}},columnTickValues:{defaultValue:null,description:"Exact values to be used for GridColumns lines, passed to xScale. Use this if you need precise control over GridColumns values.",name:"columnTickValues",required:!1,type:{name:"Parameters<XScale>[0][] | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/Grid.tsx#Grid"]={docgenInfo:S.__docgenInfo,name:"Grid",path:"../visx-grid/src/grids/Grid.tsx#Grid"})}catch(B){}var x=t("fGyu"),V=t("ofak"),R=t.n(V),O=i.a.createElement;function T(e){var n=e.arcThickness,t=e.className,a=e.endAngle,i=void 0===a?2*Math.PI:a,s=e.fill,u=void 0===s?"transparent":s,c=e.fillOpacity,f=void 0===c?1:c,m=e.left,y=void 0===m?0:m,h=e.lineClassName,g=e.lineStyle,k=e.numTicks,v=void 0===k?10:k,b=e.scale,S=e.startAngle,V=void 0===S?0:S,T=e.stroke,q=void 0===T?"#eaf0f6":T,w=e.strokeWidth,A=void 0===w?1:w,E=e.strokeDasharray,G=e.tickValues,N=e.top,C=void 0===N?0:N,_=Object(l.a)(e,["arcThickness","className","endAngle","fill","fillOpacity","left","lineClassName","lineStyle","numTicks","scale","startAngle","stroke","strokeWidth","strokeDasharray","tickValues","top"]),P=null!==G&&void 0!==G?G:Object(p.a)(b,v),j=Math.min.apply(Math,Object(x.a)(b.domain()));return O(o.a,{className:d()("visx-grid-radial",t),top:C,left:y},P.map((function(e,t){return O(R.a,Object(r.a)({key:"radial-grid-".concat(e,"-").concat(t),className:h,startAngle:V,endAngle:i,innerRadius:b(n?e-n:j),outerRadius:b(e),fill:u,fillOpacity:f,stroke:q,strokeWidth:A,strokeDasharray:E,style:g},_))})))}try{T.displayName="GridRadial",T.__docgenInfo={description:"",displayName:"GridRadial",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.\nChild components to the Arc.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | (() => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to position.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},arcThickness:{defaultValue:null,description:"If specified, the arc of each radial grid line will have this thickness, useful for fills.",name:"arcThickness",required:!1,type:{name:"number | undefined"}},endAngle:{defaultValue:{value:"2 * Math.PI"},description:"The end angle of the arc of radial grid lines in radians.",name:"endAngle",required:!1,type:{name:"number | undefined"}},lineClassName:{defaultValue:null,description:"The class name applied to all radial lines.",name:"lineClassName",required:!1,type:{name:"string | undefined"}},fill:{defaultValue:{value:"transparent"},description:"The color applied to the fill of the radial lines.",name:"fill",required:!1,type:{name:"string | undefined"}},fillOpacity:{defaultValue:{value:1},description:"The fill opacity applied to the fill of the radial lines.",name:"fillOpacity",required:!1,type:{name:"number | undefined"}},startAngle:{defaultValue:{value:0},description:"The start angle of the arc of radial grid lines in radians.",name:"startAngle",required:!1,type:{name:"number | undefined"}},data:{defaultValue:null,description:"A Datum for which to generate an arc.",name:"data",required:!1,type:{name:"Datum | undefined"}},innerRef:{defaultValue:null,description:"React ref to the path element.",name:"innerRef",required:!1,type:{name:"((instance: SVGPathElement | null) => void) | RefObject<SVGPathElement> | null | undefined"}},innerRadius:{defaultValue:null,description:"Number or accessor function which returns a number, which defines the arc innerRadius.",name:"innerRadius",required:!1,type:{name:"number | Accessor<Datum, number> | undefined"}},outerRadius:{defaultValue:null,description:"Number or accessor function which returns a number, which defines the arc outerRadius.",name:"outerRadius",required:!1,type:{name:"number | Accessor<Datum, number> | undefined"}},cornerRadius:{defaultValue:null,description:"Number or accessor function which returns a number, which defines the arc cornerRadius.",name:"cornerRadius",required:!1,type:{name:"number | Accessor<Datum, number> | undefined"}},padAngle:{defaultValue:null,description:"Number or accessor function which returns a number, which defines the arc padAngle.",name:"padAngle",required:!1,type:{name:"number | Accessor<Datum, number> | undefined"}},padRadius:{defaultValue:null,description:"Number or accessor function which returns a number, which defines the arc padRadius.",name:"padRadius",required:!1,type:{name:"number | Accessor<Datum, number> | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridRadial.tsx#GridRadial"]={docgenInfo:T.__docgenInfo,name:"GridRadial",path:"../visx-grid/src/grids/GridRadial.tsx#GridRadial"})}catch(B){}function q(e){var n=e.radius,t=e.angle;return{x:n*Math.cos(t),y:n*Math.sin(t)}}try{q.displayName="polarToCartesian",q.__docgenInfo={description:"",displayName:"polarToCartesian",props:{radius:{defaultValue:null,description:"",name:"radius",required:!0,type:{name:"number"}},angle:{defaultValue:null,description:"",name:"angle",required:!0,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/utils/polarToCartesian.ts#polarToCartesian"]={docgenInfo:q.__docgenInfo,name:"polarToCartesian",path:"../visx-grid/src/utils/polarToCartesian.ts#polarToCartesian"})}catch(B){}var w=i.a.createElement;function A(e){var n=e.className,t=e.innerRadius,a=void 0===t?0:t,i=e.left,s=void 0===i?0:i,u=e.lineClassName,y=e.lineStyle,h=e.numTicks,g=void 0===h?10:h,k=e.outerRadius,v=void 0===k?0:k,b=e.scale,S=e.stroke,x=void 0===S?"#eaf0f6":S,V=e.strokeDasharray,R=e.strokeWidth,O=void 0===R?1:R,T=e.tickValues,A=e.top,E=void 0===A?0:A,G=Object(l.a)(e,["className","innerRadius","left","lineClassName","lineStyle","numTicks","outerRadius","scale","stroke","strokeDasharray","strokeWidth","tickValues","top"]),N=null!==T&&void 0!==T?T:Object(p.a)(b,g);return w(o.a,{className:d()("visx-grid-angle",n),top:E,left:s},N.map((function(e,n){var t,i=(null!==(t=Object(m.a)(b(e)))&&void 0!==t?t:Math.PI/2)-Math.PI/2;return w(c.a,Object(r.a)({key:"polar-grid-".concat(e,"-").concat(n),className:u,from:new f.a(q({angle:i,radius:a})),to:new f.a(q({angle:i,radius:v})),stroke:x,strokeWidth:O,strokeDasharray:V,style:y},G))})))}try{A.displayName="GridAngle",A.__docgenInfo={description:"",displayName:"GridAngle",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to angle.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate angle grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},innerRadius:{defaultValue:{value:0},description:"Radius which determines the start position of angle lines.",name:"innerRadius",required:!1,type:{name:"number | undefined"}},outerRadius:{defaultValue:{value:0},description:"Radius which determines the end position of angle lines.",name:"outerRadius",required:!1,type:{name:"number"}},lineClassName:{defaultValue:null,description:"The class name applied to all angle lines.",name:"lineClassName",required:!1,type:{name:"string | undefined"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},from:{defaultValue:null,description:"Starting x,y point of the line.",name:"from",required:!1,type:{name:"Point | undefined"}},to:{defaultValue:null,description:"Ending x,y point of the line.",name:"to",required:!1,type:{name:"Point | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridAngle.tsx#GridAngle"]={docgenInfo:A.__docgenInfo,name:"GridAngle",path:"../visx-grid/src/grids/GridAngle.tsx#GridAngle"})}catch(B){}var E=i.a.createElement;function G(e){var n=e.arcThickness,t=e.className,a=e.classNameAngle,i=e.classNameRadial,r=e.endAngle,l=e.fillRadial,s=e.innerRadius,u=e.left,c=e.lineClassNameAngle,f=e.lineClassNameRadial,p=e.lineStyleAngle,m=e.lineStyleRadial,y=e.numTicksAngle,h=e.numTicksRadial,g=e.outerRadius,k=e.scaleAngle,v=e.scaleRadial,b=e.startAngle,S=e.strokeAngle,x=e.strokeRadial,V=e.strokeWidthAngle,R=e.strokeWidthRadial,O=e.strokeDasharrayAngle,q=e.strokeDasharrayRadial,w=e.tickValuesAngle,G=e.tickValuesRadial,N=e.top;return E(o.a,{className:d()("visx-grid-polar",t),top:N,left:u},E(A,{className:a,innerRadius:s,lineClassName:c,lineStyle:p,numTicks:y,outerRadius:g,scale:k,stroke:S,strokeWidth:V,strokeDasharray:O,tickValues:w}),E(T,{arcThickness:n,className:i,endAngle:r,fill:l,lineClassName:f,lineStyle:m,numTicks:h,scale:v,startAngle:b,stroke:x,strokeWidth:R,strokeDasharray:q,tickValues:G}))}try{G.displayName="GridPolar",G.__docgenInfo={description:"",displayName:"GridPolar",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:null,description:"Top offset to apply to glyph g element container.\nA top pixel offset applied to the entire grid group.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:null,description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:null,description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},arcThickness:{defaultValue:null,description:"If specified, the arc of each radial grid line will have this thickness, useful for fills.",name:"arcThickness",required:!1,type:{name:"number | undefined"}},classNameAngle:{defaultValue:null,description:"The class name applied to the angle grid group.",name:"classNameAngle",required:!1,type:{name:"string | undefined"}},classNameRadial:{defaultValue:null,description:"The class name applied to the radial grid group.",name:"classNameRadial",required:!1,type:{name:"string | undefined"}},endAngle:{defaultValue:null,description:"The end angle of the arc of radial grid lines in radians.",name:"endAngle",required:!1,type:{name:"number | undefined"}},fillRadial:{defaultValue:null,description:"The color applied to the fill of the radial lines.",name:"fillRadial",required:!1,type:{name:"string | undefined"}},innerRadius:{defaultValue:null,description:"Radius which determines the start position of angle lines.",name:"innerRadius",required:!1,type:{name:"number | undefined"}},lineClassNameAngle:{defaultValue:null,description:"Classname applied to all angle line paths.",name:"lineClassNameAngle",required:!1,type:{name:"string | undefined"}},lineClassNameRadial:{defaultValue:null,description:"Classname applied to all radial line paths.",name:"lineClassNameRadial",required:!1,type:{name:"string | undefined"}},lineStyleAngle:{defaultValue:null,description:"Style object set as the angle line path style attribute.",name:"lineStyleAngle",required:!1,type:{name:'(CSSProperties & LineProps & Pick<SVGProps<SVGLineElement>, "string" | "children" | "width" | "height" | "scale" | "style" | ... 459 more ... | "key">) | undefined'}},lineStyleRadial:{defaultValue:null,description:"Style object set as the radius line path style attribute.",name:"lineStyleRadial",required:!1,type:{name:'(CSSProperties & LineProps & Pick<SVGProps<SVGLineElement>, "string" | "children" | "width" | "height" | "scale" | "style" | ... 459 more ... | "key">) | undefined'}},numTicksAngle:{defaultValue:null,description:"The number of angle ticks wanted for the grid. Note this is approximate due to d3's algorithm,\nyou can use tickValues for greater control",name:"numTicksAngle",required:!1,type:{name:"number | undefined"}},numTicksRadial:{defaultValue:null,description:"The number of radial ticks wanted for the grid. Note this is approximate due to d3's algorithm,\nyou can use tickValues for greater control",name:"numTicksRadial",required:!1,type:{name:"number | undefined"}},outerRadius:{defaultValue:null,description:"Radius which determines the end position of angle lines.",name:"outerRadius",required:!0,type:{name:"number"}},scaleAngle:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale)\nscale function used to generate the angle of angle lines.",name:"scaleAngle",required:!0,type:{name:"Scale"}},scaleRadial:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale)\nscale function used to generate the radius of radial lines.",name:"scaleRadial",required:!0,type:{name:"Scale"}},startAngle:{defaultValue:null,description:"The start angle of the arc of radial grid lines in radians.",name:"startAngle",required:!1,type:{name:"number | undefined"}},strokeAngle:{defaultValue:null,description:"The color applied to the stroke of the angle lines.",name:"strokeAngle",required:!1,type:{name:"string | undefined"}},strokeRadial:{defaultValue:null,description:"The color applied to the stroke of the radial lines.",name:"strokeRadial",required:!1,type:{name:"string | undefined"}},strokeDasharrayAngle:{defaultValue:null,description:"The pattern of dashes for angle line stroke.",name:"strokeDasharrayAngle",required:!1,type:{name:"string | undefined"}},strokeDasharrayRadial:{defaultValue:null,description:"The pattern of dashes for angle radial stroke.",name:"strokeDasharrayRadial",required:!1,type:{name:"string | undefined"}},strokeWidthAngle:{defaultValue:null,description:"The pixel value for the width of the angle lines.",name:"strokeWidthAngle",required:!1,type:{name:"string | number | undefined"}},strokeWidthRadial:{defaultValue:null,description:"The pixel value for the width of the radial lines.",name:"strokeWidthRadial",required:!1,type:{name:"string | number | undefined"}},tickValuesAngle:{defaultValue:null,description:"An array of values that determine the number and values of the angle ticks. Falls\nback to `scale.ticks()` or `.domain()`.",name:"tickValuesAngle",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},tickValuesRadial:{defaultValue:null,description:"An array of values that determine the number and values of the radial ticks. Falls\nback to `scale.ticks()` or `.domain()`.",name:"tickValuesRadial",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridPolar.tsx#GridPolar"]={docgenInfo:G.__docgenInfo,name:"GridPolar",path:"../visx-grid/src/grids/GridPolar.tsx#GridPolar"})}catch(B){}var N=t("QnPE"),C=t("smMw"),_=t("xtlv"),P=t("JjBE"),j=t("x401"),L=i.a.createElement,D=[g,v,S,T,A,G],W=[C.default,_.default,P.default,j.default];n.default=function(){return L(N.a,{components:D,examples:W,readme:'# @visx/grid\n\n<a title="@visx/grid npm downloads" href="https://www.npmjs.com/package/@visx/grid">\n  <img src="https://img.shields.io/npm/dm/@visx/grid.svg?style=flat-square" />\n</a>\n\nThe `@visx/grid` package lets you create gridlines for charts. `<GridRows />` render horizontally,\n`<GridColumns />` render vertically, or you can use a `<Grid />` to get them both at once!\n\n## Usage\n\n```js\nimport { Grid } from \'@visx/grid\';\n// or\n// import * as Grid from \'@visx/grid\';\n// <Grid.Grid />\n\nconst grid = (\n  <Grid\n    xScale={xScale}\n    yScale={yScale}\n    width={xMax}\n    height={yMax}\n    numTicksRows={numTicksForHeight(height)}\n    numTicksColumns={numTicksForWidth(width)}\n  />\n);\n```\n\n## Installation\n\n```\nnpm install --save @visx/grid\n```\n',visxPackage:"grid"})}},hNR5:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t("aWzz"),i=t.n(a),r=t("ERkP"),l=t.n(r);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function d(e){var n=e.id,t=e.children,a=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,["id","children"]);return l.a.createElement("defs",null,l.a.createElement("clipPath",s({id:n},a),t))}d.propTypes={id:i.a.string.isRequired,children:i.a.node}},jpI8:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var a=t("VB+g"),i=t("ZQHj");function r(e,n){if(Object(i.a)(e)&&n)return Object(a.a)(e,n);if(Object(i.b)(e)){var t=e,r=t.target;if(r)return Object(a.a)(r,t)}return null}},mdYk:function(e){e.exports=JSON.parse('{"name":"@visx/demo-threshold","description":"Standalone visx threshold demo.","main":"index.tsx","private":true,"dependencies":{"@babel/runtime":"^7.8.4","@types/react":"^16","@types/react-dom":"^16","@visx/axis":"latest","@visx/curve":"latest","@visx/grid":"latest","@visx/group":"latest","@visx/mock-data":"latest","@visx/responsive":"latest","@visx/scale":"latest","@visx/shape":"latest","@visx/threshold":"latest","react":"^16","react-dom":"^16","react-scripts-ts":"3.1.0","typescript":"^3"},"keywords":["visualization","d3","react","visx","threshold"]}')},smMw:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return f}));var a=t("ERkP"),i=t.n(a),r=t("gnM9"),l=t("i9k6"),s=t("Soe+");t.d(n,"packageJson",(function(){return s}));var d=i.a.createElement,o={backgroundColor:r.a},u={color:r.c},c={showControls:!1};function f(){return d(l.a,{title:"Axes & scales",description:"<Axis.AxisBottom />",detailsStyles:u,detailsHeight:20,exampleProps:c,exampleRenderer:r.b,exampleUrl:"/axis",tileStyles:o})}},xtlv:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var a=t("ERkP"),i=t.n(a),r=t("wReH"),l=t("i9k6"),s=t("dk/h");t.d(n,"packageJson",(function(){return s}));var d=i.a.createElement,o={background:r.a},u={color:r.c,zIndex:1};function c(){return d(l.a,{title:"Bar Stack",description:"<Shape.BarStack />",detailsStyles:u,exampleRenderer:r.b,exampleUrl:"/barstack",tileStyles:o})}}},[["ZRGc",0,2,1,3,4,5,7,9,8,10,11,12,13,14,15,16,17,18,19,20,23,22,27,31,34]]]);